{"version":3,"file":"component---src-pages-blog-index-tsx-1f66145b8ef5d15de579.js","mappings":"6JAqDA,IA1CY,WACV,IAeMA,GAfOC,EAAAA,EAAAA,gBAAe,cAeRC,KAAKC,aAAaH,OAEtC,OACE,eAAKI,UAAU,QACb,QAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,kCACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,IACTC,IAAI,kBARN,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,QACP,oBACE,QAAC,EAAAC,KAAD,CAAMC,GAAIf,EAAOgB,KAAMC,OAAO,WAC5B,sBAASjB,EAAOa,QAElB,kBAAIb,MAAAA,OAAA,EAAAA,EAAQkB,MAAO,U,yFCU7B,UAjDkB,SAAC,GAAc,IACzBC,EADwB,EAAXC,KACAC,OAAOC,MAE1B,OAAqB,IAAjBH,EAAMI,QAEN,QAAC,IAAD,MACE,QAAC,IAAD,CAAKC,MAAM,eACX,QAAC,IAAD,OACA,8EAMJ,QAAC,IAAD,MACE,QAAC,IAAD,CAAKA,MAAM,eACX,QAAC,IAAD,OACA,cAAIC,MAAO,CAAEC,UAAU,SACpBP,EAAMQ,KAAI,SAAAC,GACT,IAAMJ,EAAQI,EAAKC,YAAYL,OAASI,EAAKE,KAE7C,OACE,cAAIC,IAAKH,EAAKE,OACZ,mBAAS1B,UAAU,iBAAiB4B,WAAS,EAACC,SAAS,8BACrD,uBACE,mBACE,QAAC,EAAAnB,KAAD,CAAMC,GAAIa,EAAKE,KAAMI,SAAS,QAC5B,gBAAMA,SAAS,YAAYV,MAG/B,qBAAQI,EAAKC,YAAYM,QAE3B,wBACE,aACEC,wBAAyB,CACvBC,OAAQT,EAAKU,SAEfJ,SAAS,0B","sources":["webpack://ordinary-days/./src/components/bio.tsx","webpack://ordinary-days/./src/pages/blog/index.tsx"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            bio\n            link\n          }\n        }\n      }\n    }\n  `);\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata.author;\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={['auto', 'webp', 'avif']}\n        src=\"../../../data/images/avatar.png\"\n        width={50}\n        height={50}\n        quality={100}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <div>\n          <Link to={author.link} target=\"_blank\">\n            <strong>{author.name}</strong>\n          </Link>\n          <p>{author?.bio || null}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Bio;\n","import * as React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../../components/bio';\nimport PostLayout from '../../components/post-layout';\nimport Seo from '../../components/seo';\n\nconst BlogIndex = ({ data }) => {\n  const posts = data.allMdx.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <PostLayout>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>No blog posts found. Add markdown posts to \"data/blog\".</p>\n      </PostLayout>\n    );\n  }\n\n  return (\n    <PostLayout>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.slug;\n\n          return (\n            <li key={post.slug}>\n              <article className=\"post-list-item\" itemScope itemType=\"http://schema.org/Article\">\n                <header>\n                  <h2>\n                    <Link to={post.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n    </PostLayout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        slug\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n        }\n      }\n    }\n  }\n`;\n"],"names":["author","useStaticQuery","site","siteMetadata","className","S","layout","formats","src","width","height","quality","alt","name","Link","to","link","target","bio","posts","data","allMdx","nodes","length","title","style","listStyle","map","post","frontmatter","slug","key","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","excerpt"],"sourceRoot":""}