{"version":3,"file":"51a4f93730734f935044eec6d0061b98ab22bc78-78ce08046f4a2d60cc14.js","mappings":"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,IAAK,KAAM,CAAC,KAAM,MAAO,CAAC,KAAM,MAAO,CAAC,KAAM,MAAO,CAAC,KAAM,MAAO,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,KAAM,MAAO,CAAC,KAAM,MAAO,CAAC,KAAM,MAAO,CAAC,KAAM,MAAO,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,OAAQ,CAAC,IAAK,OAAQ,CAAC,IAAK,IAAK,CAAC,IAAK,IAAK,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,IAAK,CAAC,IAAK,IAAK,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MACj5B,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAC1F,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAC1F,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,OAAQ,CAAC,IAAK,OAAQ,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,KAAM,KAAM,CAAC,KAAM,KAAM,CAAC,KAAM,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,OAC37B,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAO,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAAO,CAAC,IAAK,KAAM,CAAC,IAAK,MAAO,CAAC,IAAK,KAAM,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,MAAO,CAAC,IAAK,OAAQ,CAAC,IAAK,MAAO,CAAC,IAAK,KAAM,CAAC,IAAK,KACjZ,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAClvlzB,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAClQ,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IA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","sources":["webpack://ordinary-days/./node_modules/lodash.deburr/index.js","webpack://ordinary-days/./src/components/bio.tsx","webpack://ordinary-days/./src/components/post/post-layout.tsx","webpack://ordinary-days/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://ordinary-days/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://ordinary-days/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://ordinary-days/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://ordinary-days/./node_modules/@sindresorhus/transliterate/node_modules/escape-string-regexp/index.js","webpack://ordinary-days/./node_modules/@sindresorhus/transliterate/replacements.js","webpack://ordinary-days/./node_modules/@sindresorhus/transliterate/index.js","webpack://ordinary-days/./node_modules/@sindresorhus/slugify/overridable-replacements.js","webpack://ordinary-days/./node_modules/@sindresorhus/slugify/index.js","webpack://ordinary-days/./node_modules/@sindresorhus/slugify/node_modules/escape-string-regexp/index.js","webpack://ordinary-days/./src/components/post/post-tags.tsx"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n/** `Object#toString` result references. */\n\nvar symbolTag = '[object Symbol]';\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\n\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n/** Used to compose unicode character classes. */\n\nvar rsComboMarksRange = \"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\",\n    rsComboSymbolsRange = \"\\\\u20d0-\\\\u20f0\";\n/** Used to compose unicode capture groups. */\n\nvar rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']';\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\n\nvar reComboMark = RegExp(rsCombo, 'g');\n/** Used to map Latin Unicode letters to basic Latin letters. */\n\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',\n  '\\xc1': 'A',\n  '\\xc2': 'A',\n  '\\xc3': 'A',\n  '\\xc4': 'A',\n  '\\xc5': 'A',\n  '\\xe0': 'a',\n  '\\xe1': 'a',\n  '\\xe2': 'a',\n  '\\xe3': 'a',\n  '\\xe4': 'a',\n  '\\xe5': 'a',\n  '\\xc7': 'C',\n  '\\xe7': 'c',\n  '\\xd0': 'D',\n  '\\xf0': 'd',\n  '\\xc8': 'E',\n  '\\xc9': 'E',\n  '\\xca': 'E',\n  '\\xcb': 'E',\n  '\\xe8': 'e',\n  '\\xe9': 'e',\n  '\\xea': 'e',\n  '\\xeb': 'e',\n  '\\xcc': 'I',\n  '\\xcd': 'I',\n  '\\xce': 'I',\n  '\\xcf': 'I',\n  '\\xec': 'i',\n  '\\xed': 'i',\n  '\\xee': 'i',\n  '\\xef': 'i',\n  '\\xd1': 'N',\n  '\\xf1': 'n',\n  '\\xd2': 'O',\n  '\\xd3': 'O',\n  '\\xd4': 'O',\n  '\\xd5': 'O',\n  '\\xd6': 'O',\n  '\\xd8': 'O',\n  '\\xf2': 'o',\n  '\\xf3': 'o',\n  '\\xf4': 'o',\n  '\\xf5': 'o',\n  '\\xf6': 'o',\n  '\\xf8': 'o',\n  '\\xd9': 'U',\n  '\\xda': 'U',\n  '\\xdb': 'U',\n  '\\xdc': 'U',\n  '\\xf9': 'u',\n  '\\xfa': 'u',\n  '\\xfb': 'u',\n  '\\xfc': 'u',\n  '\\xdd': 'Y',\n  '\\xfd': 'y',\n  '\\xff': 'y',\n  '\\xc6': 'Ae',\n  '\\xe6': 'ae',\n  '\\xde': 'Th',\n  '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  \"\\u0100\": 'A',\n  \"\\u0102\": 'A',\n  \"\\u0104\": 'A',\n  \"\\u0101\": 'a',\n  \"\\u0103\": 'a',\n  \"\\u0105\": 'a',\n  \"\\u0106\": 'C',\n  \"\\u0108\": 'C',\n  \"\\u010A\": 'C',\n  \"\\u010C\": 'C',\n  \"\\u0107\": 'c',\n  \"\\u0109\": 'c',\n  \"\\u010B\": 'c',\n  \"\\u010D\": 'c',\n  \"\\u010E\": 'D',\n  \"\\u0110\": 'D',\n  \"\\u010F\": 'd',\n  \"\\u0111\": 'd',\n  \"\\u0112\": 'E',\n  \"\\u0114\": 'E',\n  \"\\u0116\": 'E',\n  \"\\u0118\": 'E',\n  \"\\u011A\": 'E',\n  \"\\u0113\": 'e',\n  \"\\u0115\": 'e',\n  \"\\u0117\": 'e',\n  \"\\u0119\": 'e',\n  \"\\u011B\": 'e',\n  \"\\u011C\": 'G',\n  \"\\u011E\": 'G',\n  \"\\u0120\": 'G',\n  \"\\u0122\": 'G',\n  \"\\u011D\": 'g',\n  \"\\u011F\": 'g',\n  \"\\u0121\": 'g',\n  \"\\u0123\": 'g',\n  \"\\u0124\": 'H',\n  \"\\u0126\": 'H',\n  \"\\u0125\": 'h',\n  \"\\u0127\": 'h',\n  \"\\u0128\": 'I',\n  \"\\u012A\": 'I',\n  \"\\u012C\": 'I',\n  \"\\u012E\": 'I',\n  \"\\u0130\": 'I',\n  \"\\u0129\": 'i',\n  \"\\u012B\": 'i',\n  \"\\u012D\": 'i',\n  \"\\u012F\": 'i',\n  \"\\u0131\": 'i',\n  \"\\u0134\": 'J',\n  \"\\u0135\": 'j',\n  \"\\u0136\": 'K',\n  \"\\u0137\": 'k',\n  \"\\u0138\": 'k',\n  \"\\u0139\": 'L',\n  \"\\u013B\": 'L',\n  \"\\u013D\": 'L',\n  \"\\u013F\": 'L',\n  \"\\u0141\": 'L',\n  \"\\u013A\": 'l',\n  \"\\u013C\": 'l',\n  \"\\u013E\": 'l',\n  \"\\u0140\": 'l',\n  \"\\u0142\": 'l',\n  \"\\u0143\": 'N',\n  \"\\u0145\": 'N',\n  \"\\u0147\": 'N',\n  \"\\u014A\": 'N',\n  \"\\u0144\": 'n',\n  \"\\u0146\": 'n',\n  \"\\u0148\": 'n',\n  \"\\u014B\": 'n',\n  \"\\u014C\": 'O',\n  \"\\u014E\": 'O',\n  \"\\u0150\": 'O',\n  \"\\u014D\": 'o',\n  \"\\u014F\": 'o',\n  \"\\u0151\": 'o',\n  \"\\u0154\": 'R',\n  \"\\u0156\": 'R',\n  \"\\u0158\": 'R',\n  \"\\u0155\": 'r',\n  \"\\u0157\": 'r',\n  \"\\u0159\": 'r',\n  \"\\u015A\": 'S',\n  \"\\u015C\": 'S',\n  \"\\u015E\": 'S',\n  \"\\u0160\": 'S',\n  \"\\u015B\": 's',\n  \"\\u015D\": 's',\n  \"\\u015F\": 's',\n  \"\\u0161\": 's',\n  \"\\u0162\": 'T',\n  \"\\u0164\": 'T',\n  \"\\u0166\": 'T',\n  \"\\u0163\": 't',\n  \"\\u0165\": 't',\n  \"\\u0167\": 't',\n  \"\\u0168\": 'U',\n  \"\\u016A\": 'U',\n  \"\\u016C\": 'U',\n  \"\\u016E\": 'U',\n  \"\\u0170\": 'U',\n  \"\\u0172\": 'U',\n  \"\\u0169\": 'u',\n  \"\\u016B\": 'u',\n  \"\\u016D\": 'u',\n  \"\\u016F\": 'u',\n  \"\\u0171\": 'u',\n  \"\\u0173\": 'u',\n  \"\\u0174\": 'W',\n  \"\\u0175\": 'w',\n  \"\\u0176\": 'Y',\n  \"\\u0177\": 'y',\n  \"\\u0178\": 'Y',\n  \"\\u0179\": 'Z',\n  \"\\u017B\": 'Z',\n  \"\\u017D\": 'Z',\n  \"\\u017A\": 'z',\n  \"\\u017C\": 'z',\n  \"\\u017E\": 'z',\n  \"\\u0132\": 'IJ',\n  \"\\u0133\": 'ij',\n  \"\\u0152\": 'Oe',\n  \"\\u0153\": 'oe',\n  \"\\u0149\": \"'n\",\n  \"\\u017F\": 'ss'\n};\n/** Detect free variable `global` from Node.js. */\n\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n/** Detect free variable `self`. */\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\n\nfunction basePropertyOf(object) {\n  return function (key) {\n    return object == null ? undefined : object[key];\n  };\n}\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\n\n\nvar deburrLetter = basePropertyOf(deburredLetters);\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar objectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar Symbol = root.Symbol;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\n\n\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;\n}\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\n\n\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            bio\n            link\n          }\n        }\n      }\n    }\n  `);\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata.author;\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={['auto', 'webp', 'avif']}\n        src=\"../../../data/images/avatar.png\"\n        width={50}\n        height={50}\n        quality={100}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <div>\n          <a href={author.link} target=\"_blank\">\n            <strong>{author.name}</strong>\n          </a>\n          <p>{author?.bio || null}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Bio;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport HeaderNav from '../header-nav';\nimport Footer from '../footer';\n\nconst GlobalWrapper = styled.div`\n  display: grid;\n  grid-template-rows: 60px minmax(200px, 1fr) auto;\n  min-height: 100vh;\n  max-width: var(--maxWidth-wrapper);\n`;\n\nconst PostLayout = ({ children }) => {\n  return (\n    <GlobalWrapper className=\"global-wrapper\">\n      <HeaderNav />\n      <main className=\"post-wrapper\">{children}</main>\n      <Footer />\n    </GlobalWrapper>\n  );\n};\n\nexport default PostLayout;\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function escapeStringRegexp(string) {\n  if (typeof string !== 'string') {\n    throw new TypeError('Expected a string');\n  } // Escape characters with special meaning either inside or outside character sets.\n  // Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\n\n  return string.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}","var replacements = [// German umlauts\n['ß', 'ss'], ['ẞ', 'Ss'], ['ä', 'ae'], ['Ä', 'Ae'], ['ö', 'oe'], ['Ö', 'Oe'], ['ü', 'ue'], ['Ü', 'Ue'], // Latin\n['À', 'A'], ['Á', 'A'], ['Â', 'A'], ['Ã', 'A'], ['Ä', 'Ae'], ['Å', 'A'], ['Æ', 'AE'], ['Ç', 'C'], ['È', 'E'], ['É', 'E'], ['Ê', 'E'], ['Ë', 'E'], ['Ì', 'I'], ['Í', 'I'], ['Î', 'I'], ['Ï', 'I'], ['Ð', 'D'], ['Ñ', 'N'], ['Ò', 'O'], ['Ó', 'O'], ['Ô', 'O'], ['Õ', 'O'], ['Ö', 'Oe'], ['Ő', 'O'], ['Ø', 'O'], ['Ù', 'U'], ['Ú', 'U'], ['Û', 'U'], ['Ü', 'Ue'], ['Ű', 'U'], ['Ý', 'Y'], ['Þ', 'TH'], ['ß', 'ss'], ['à', 'a'], ['á', 'a'], ['â', 'a'], ['ã', 'a'], ['ä', 'ae'], ['å', 'a'], ['æ', 'ae'], ['ç', 'c'], ['è', 'e'], ['é', 'e'], ['ê', 'e'], ['ë', 'e'], ['ì', 'i'], ['í', 'i'], ['î', 'i'], ['ï', 'i'], ['ð', 'd'], ['ñ', 'n'], ['ò', 'o'], ['ó', 'o'], ['ô', 'o'], ['õ', 'o'], ['ö', 'oe'], ['ő', 'o'], ['ø', 'o'], ['ù', 'u'], ['ú', 'u'], ['û', 'u'], ['ü', 'ue'], ['ű', 'u'], ['ý', 'y'], ['þ', 'th'], ['ÿ', 'y'], ['ẞ', 'SS'], // Vietnamese\n['à', 'a'], ['À', 'A'], ['á', 'a'], ['Á', 'A'], ['â', 'a'], ['Â', 'A'], ['ã', 'a'], ['Ã', 'A'], ['è', 'e'], ['È', 'E'], ['é', 'e'], ['É', 'E'], ['ê', 'e'], ['Ê', 'E'], ['ì', 'i'], ['Ì', 'I'], ['í', 'i'], ['Í', 'I'], ['ò', 'o'], ['Ò', 'O'], ['ó', 'o'], ['Ó', 'O'], ['ô', 'o'], ['Ô', 'O'], ['õ', 'o'], ['Õ', 'O'], ['ù', 'u'], ['Ù', 'U'], ['ú', 'u'], ['Ú', 'U'], ['ý', 'y'], ['Ý', 'Y'], ['ă', 'a'], ['Ă', 'A'], ['Đ', 'D'], ['đ', 'd'], ['ĩ', 'i'], ['Ĩ', 'I'], ['ũ', 'u'], ['Ũ', 'U'], ['ơ', 'o'], ['Ơ', 'O'], ['ư', 'u'], ['Ư', 'U'], ['ạ', 'a'], ['Ạ', 'A'], ['ả', 'a'], ['Ả', 'A'], ['ấ', 'a'], ['Ấ', 'A'], ['ầ', 'a'], ['Ầ', 'A'], ['ẩ', 'a'], ['Ẩ', 'A'], ['ẫ', 'a'], ['Ẫ', 'A'], ['ậ', 'a'], ['Ậ', 'A'], ['ắ', 'a'], ['Ắ', 'A'], ['ằ', 'a'], ['Ằ', 'A'], ['ẳ', 'a'], ['Ẳ', 'A'], ['ẵ', 'a'], ['Ẵ', 'A'], ['ặ', 'a'], ['Ặ', 'A'], ['ẹ', 'e'], ['Ẹ', 'E'], ['ẻ', 'e'], ['Ẻ', 'E'], ['ẽ', 'e'], ['Ẽ', 'E'], ['ế', 'e'], ['Ế', 'E'], ['ề', 'e'], ['Ề', 'E'], ['ể', 'e'], ['Ể', 'E'], ['ễ', 'e'], ['Ễ', 'E'], ['ệ', 'e'], ['Ệ', 'E'], ['ỉ', 'i'], ['Ỉ', 'I'], ['ị', 'i'], ['Ị', 'I'], ['ọ', 'o'], ['Ọ', 'O'], ['ỏ', 'o'], ['Ỏ', 'O'], ['ố', 'o'], ['Ố', 'O'], ['ồ', 'o'], ['Ồ', 'O'], ['ổ', 'o'], ['Ổ', 'O'], ['ỗ', 'o'], ['Ỗ', 'O'], ['ộ', 'o'], ['Ộ', 'O'], ['ớ', 'o'], ['Ớ', 'O'], ['ờ', 'o'], ['Ờ', 'O'], ['ở', 'o'], ['Ở', 'O'], ['ỡ', 'o'], ['Ỡ', 'O'], ['ợ', 'o'], ['Ợ', 'O'], ['ụ', 'u'], ['Ụ', 'U'], ['ủ', 'u'], ['Ủ', 'U'], ['ứ', 'u'], ['Ứ', 'U'], ['ừ', 'u'], ['Ừ', 'U'], ['ử', 'u'], ['Ử', 'U'], ['ữ', 'u'], ['Ữ', 'U'], ['ự', 'u'], ['Ự', 'U'], ['ỳ', 'y'], ['Ỳ', 'Y'], ['ỵ', 'y'], ['Ỵ', 'Y'], ['ỷ', 'y'], ['Ỷ', 'Y'], ['ỹ', 'y'], ['Ỹ', 'Y'], // Arabic\n['ء', 'e'], ['آ', 'a'], ['أ', 'a'], ['ؤ', 'w'], ['إ', 'i'], ['ئ', 'y'], ['ا', 'a'], ['ب', 'b'], ['ة', 't'], ['ت', 't'], ['ث', 'th'], ['ج', 'j'], ['ح', 'h'], ['خ', 'kh'], ['د', 'd'], ['ذ', 'dh'], ['ر', 'r'], ['ز', 'z'], ['س', 's'], ['ش', 'sh'], ['ص', 's'], ['ض', 'd'], ['ط', 't'], ['ظ', 'z'], ['ع', 'e'], ['غ', 'gh'], ['ـ', '_'], ['ف', 'f'], ['ق', 'q'], ['ك', 'k'], ['ل', 'l'], ['م', 'm'], ['ن', 'n'], ['ه', 'h'], ['و', 'w'], ['ى', 'a'], ['ي', 'y'], ['َ‎', 'a'], ['ُ', 'u'], ['ِ‎', 'i'], ['٠', '0'], ['١', '1'], ['٢', '2'], ['٣', '3'], ['٤', '4'], ['٥', '5'], ['٦', '6'], ['٧', '7'], ['٨', '8'], ['٩', '9'], // Persian / Farsi\n['چ', 'ch'], ['ک', 'k'], ['گ', 'g'], ['پ', 'p'], ['ژ', 'zh'], ['ی', 'y'], ['۰', '0'], ['۱', '1'], ['۲', '2'], ['۳', '3'], ['۴', '4'], ['۵', '5'], ['۶', '6'], ['۷', '7'], ['۸', '8'], ['۹', '9'], // Pashto\n['ټ', 'p'], ['ځ', 'z'], ['څ', 'c'], ['ډ', 'd'], ['ﺫ', 'd'], ['ﺭ', 'r'], ['ړ', 'r'], ['ﺯ', 'z'], ['ږ', 'g'], ['ښ', 'x'], ['ګ', 'g'], ['ڼ', 'n'], ['ۀ', 'e'], ['ې', 'e'], ['ۍ', 'ai'], // Urdu\n['ٹ', 't'], ['ڈ', 'd'], ['ڑ', 'r'], ['ں', 'n'], ['ہ', 'h'], ['ھ', 'h'], ['ے', 'e'], // Russian\n['А', 'A'], ['а', 'a'], ['Б', 'B'], ['б', 'b'], ['В', 'V'], ['в', 'v'], ['Г', 'G'], ['г', 'g'], ['Д', 'D'], ['д', 'd'], ['ъе', 'ye'], ['Ъе', 'Ye'], ['ъЕ', 'yE'], ['ЪЕ', 'YE'], ['Е', 'E'], ['е', 'e'], ['Ё', 'Yo'], ['ё', 'yo'], ['Ж', 'Zh'], ['ж', 'zh'], ['З', 'Z'], ['з', 'z'], ['И', 'I'], ['и', 'i'], ['ый', 'iy'], ['Ый', 'Iy'], ['ЫЙ', 'IY'], ['ыЙ', 'iY'], ['Й', 'Y'], ['й', 'y'], ['К', 'K'], ['к', 'k'], ['Л', 'L'], ['л', 'l'], ['М', 'M'], ['м', 'm'], ['Н', 'N'], ['н', 'n'], ['О', 'O'], ['о', 'o'], ['П', 'P'], ['п', 'p'], ['Р', 'R'], ['р', 'r'], ['С', 'S'], ['с', 's'], ['Т', 'T'], ['т', 't'], ['У', 'U'], ['у', 'u'], ['Ф', 'F'], ['ф', 'f'], ['Х', 'Kh'], ['х', 'kh'], ['Ц', 'Ts'], ['ц', 'ts'], ['Ч', 'Ch'], ['ч', 'ch'], ['Ш', 'Sh'], ['ш', 'sh'], ['Щ', 'Sch'], ['щ', 'sch'], ['Ъ', ''], ['ъ', ''], ['Ы', 'Y'], ['ы', 'y'], ['Ь', ''], ['ь', ''], ['Э', 'E'], ['э', 'e'], ['Ю', 'Yu'], ['ю', 'yu'], ['Я', 'Ya'], ['я', 'ya'], // Romanian\n['ă', 'a'], ['Ă', 'A'], ['ș', 's'], ['Ș', 'S'], ['ț', 't'], ['Ț', 'T'], ['ţ', 't'], ['Ţ', 'T'], // Turkish\n['ş', 's'], ['Ş', 'S'], ['ç', 'c'], ['Ç', 'C'], ['ğ', 'g'], ['Ğ', 'G'], ['ı', 'i'], ['İ', 'I'], // Armenian\n['ա', 'a'], ['Ա', 'A'], ['բ', 'b'], ['Բ', 'B'], ['գ', 'g'], ['Գ', 'G'], ['դ', 'd'], ['Դ', 'D'], ['ե', 'ye'], ['Ե', 'Ye'], ['զ', 'z'], ['Զ', 'Z'], ['է', 'e'], ['Է', 'E'], ['ը', 'y'], ['Ը', 'Y'], ['թ', 't'], ['Թ', 'T'], ['ժ', 'zh'], ['Ժ', 'Zh'], ['ի', 'i'], ['Ի', 'I'], ['լ', 'l'], ['Լ', 'L'], ['խ', 'kh'], ['Խ', 'Kh'], ['ծ', 'ts'], ['Ծ', 'Ts'], ['կ', 'k'], ['Կ', 'K'], ['հ', 'h'], ['Հ', 'H'], ['ձ', 'dz'], ['Ձ', 'Dz'], ['ղ', 'gh'], ['Ղ', 'Gh'], ['ճ', 'tch'], ['Ճ', 'Tch'], ['մ', 'm'], ['Մ', 'M'], ['յ', 'y'], ['Յ', 'Y'], ['ն', 'n'], ['Ն', 'N'], ['շ', 'sh'], ['Շ', 'Sh'], ['ո', 'vo'], ['Ո', 'Vo'], ['չ', 'ch'], ['Չ', 'Ch'], ['պ', 'p'], ['Պ', 'P'], ['ջ', 'j'], ['Ջ', 'J'], ['ռ', 'r'], ['Ռ', 'R'], ['ս', 's'], ['Ս', 'S'], ['վ', 'v'], ['Վ', 'V'], ['տ', 't'], ['Տ', 'T'], ['ր', 'r'], ['Ր', 'R'], ['ց', 'c'], ['Ց', 'C'], ['ու', 'u'], ['ՈՒ', 'U'], ['Ու', 'U'], ['փ', 'p'], ['Փ', 'P'], ['ք', 'q'], ['Ք', 'Q'], ['օ', 'o'], ['Օ', 'O'], ['ֆ', 'f'], ['Ֆ', 'F'], ['և', 'yev'], // Georgian\n['ა', 'a'], ['ბ', 'b'], ['გ', 'g'], ['დ', 'd'], ['ე', 'e'], ['ვ', 'v'], ['ზ', 'z'], ['თ', 't'], ['ი', 'i'], ['კ', 'k'], ['ლ', 'l'], ['მ', 'm'], ['ნ', 'n'], ['ო', 'o'], ['პ', 'p'], ['ჟ', 'zh'], ['რ', 'r'], ['ს', 's'], ['ტ', 't'], ['უ', 'u'], ['ფ', 'ph'], ['ქ', 'q'], ['ღ', 'gh'], ['ყ', 'k'], ['შ', 'sh'], ['ჩ', 'ch'], ['ც', 'ts'], ['ძ', 'dz'], ['წ', 'ts'], ['ჭ', 'tch'], ['ხ', 'kh'], ['ჯ', 'j'], ['ჰ', 'h'], // Czech\n['č', 'c'], ['ď', 'd'], ['ě', 'e'], ['ň', 'n'], ['ř', 'r'], ['š', 's'], ['ť', 't'], ['ů', 'u'], ['ž', 'z'], ['Č', 'C'], ['Ď', 'D'], ['Ě', 'E'], ['Ň', 'N'], ['Ř', 'R'], ['Š', 'S'], ['Ť', 'T'], ['Ů', 'U'], ['Ž', 'Z'], // Dhivehi\n['ހ', 'h'], ['ށ', 'sh'], ['ނ', 'n'], ['ރ', 'r'], ['ބ', 'b'], ['ޅ', 'lh'], ['ކ', 'k'], ['އ', 'a'], ['ވ', 'v'], ['މ', 'm'], ['ފ', 'f'], ['ދ', 'dh'], ['ތ', 'th'], ['ލ', 'l'], ['ގ', 'g'], ['ޏ', 'gn'], ['ސ', 's'], ['ޑ', 'd'], ['ޒ', 'z'], ['ޓ', 't'], ['ޔ', 'y'], ['ޕ', 'p'], ['ޖ', 'j'], ['ޗ', 'ch'], ['ޘ', 'tt'], ['ޙ', 'hh'], ['ޚ', 'kh'], ['ޛ', 'th'], ['ޜ', 'z'], ['ޝ', 'sh'], ['ޞ', 's'], ['ޟ', 'd'], ['ޠ', 't'], ['ޡ', 'z'], ['ޢ', 'a'], ['ޣ', 'gh'], ['ޤ', 'q'], ['ޥ', 'w'], ['ަ', 'a'], ['ާ', 'aa'], ['ި', 'i'], ['ީ', 'ee'], ['ު', 'u'], ['ޫ', 'oo'], ['ެ', 'e'], ['ޭ', 'ey'], ['ޮ', 'o'], ['ޯ', 'oa'], ['ް', ''], // Greek\n['α', 'a'], ['β', 'v'], ['γ', 'g'], ['δ', 'd'], ['ε', 'e'], ['ζ', 'z'], ['η', 'i'], ['θ', 'th'], ['ι', 'i'], ['κ', 'k'], ['λ', 'l'], ['μ', 'm'], ['ν', 'n'], ['ξ', 'ks'], ['ο', 'o'], ['π', 'p'], ['ρ', 'r'], ['σ', 's'], ['τ', 't'], ['υ', 'y'], ['φ', 'f'], ['χ', 'x'], ['ψ', 'ps'], ['ω', 'o'], ['ά', 'a'], ['έ', 'e'], ['ί', 'i'], ['ό', 'o'], ['ύ', 'y'], ['ή', 'i'], ['ώ', 'o'], ['ς', 's'], ['ϊ', 'i'], ['ΰ', 'y'], ['ϋ', 'y'], ['ΐ', 'i'], ['Α', 'A'], ['Β', 'B'], ['Γ', 'G'], ['Δ', 'D'], ['Ε', 'E'], ['Ζ', 'Z'], ['Η', 'I'], ['Θ', 'TH'], ['Ι', 'I'], ['Κ', 'K'], ['Λ', 'L'], ['Μ', 'M'], ['Ν', 'N'], ['Ξ', 'KS'], ['Ο', 'O'], ['Π', 'P'], ['Ρ', 'R'], ['Σ', 'S'], ['Τ', 'T'], ['Υ', 'Y'], ['Φ', 'F'], ['Χ', 'X'], ['Ψ', 'PS'], ['Ω', 'O'], ['Ά', 'A'], ['Έ', 'E'], ['Ί', 'I'], ['Ό', 'O'], ['Ύ', 'Y'], ['Ή', 'I'], ['Ώ', 'O'], ['Ϊ', 'I'], ['Ϋ', 'Y'], // Disabled as it conflicts with German and Latin.\n// Hungarian\n// ['ä', 'a'],\n// ['Ä', 'A'],\n// ['ö', 'o'],\n// ['Ö', 'O'],\n// ['ü', 'u'],\n// ['Ü', 'U'],\n// ['ű', 'u'],\n// ['Ű', 'U'],\n// Latvian\n['ā', 'a'], ['ē', 'e'], ['ģ', 'g'], ['ī', 'i'], ['ķ', 'k'], ['ļ', 'l'], ['ņ', 'n'], ['ū', 'u'], ['Ā', 'A'], ['Ē', 'E'], ['Ģ', 'G'], ['Ī', 'I'], ['Ķ', 'K'], ['Ļ', 'L'], ['Ņ', 'N'], ['Ū', 'U'], ['č', 'c'], ['š', 's'], ['ž', 'z'], ['Č', 'C'], ['Š', 'S'], ['Ž', 'Z'], // Lithuanian\n['ą', 'a'], ['č', 'c'], ['ę', 'e'], ['ė', 'e'], ['į', 'i'], ['š', 's'], ['ų', 'u'], ['ū', 'u'], ['ž', 'z'], ['Ą', 'A'], ['Č', 'C'], ['Ę', 'E'], ['Ė', 'E'], ['Į', 'I'], ['Š', 'S'], ['Ų', 'U'], ['Ū', 'U'], // Macedonian\n['Ќ', 'Kj'], ['ќ', 'kj'], ['Љ', 'Lj'], ['љ', 'lj'], ['Њ', 'Nj'], ['њ', 'nj'], ['Тс', 'Ts'], ['тс', 'ts'], // Polish\n['ą', 'a'], ['ć', 'c'], ['ę', 'e'], ['ł', 'l'], ['ń', 'n'], ['ś', 's'], ['ź', 'z'], ['ż', 'z'], ['Ą', 'A'], ['Ć', 'C'], ['Ę', 'E'], ['Ł', 'L'], ['Ń', 'N'], ['Ś', 'S'], ['Ź', 'Z'], ['Ż', 'Z'], // Disabled as it conflicts with Vietnamese.\n// Serbian\n// ['љ', 'lj'],\n// ['њ', 'nj'],\n// ['Љ', 'Lj'],\n// ['Њ', 'Nj'],\n// ['đ', 'dj'],\n// ['Đ', 'Dj'],\n// ['ђ', 'dj'],\n// ['ј', 'j'],\n// ['ћ', 'c'],\n// ['џ', 'dz'],\n// ['Ђ', 'Dj'],\n// ['Ј', 'j'],\n// ['Ћ', 'C'],\n// ['Џ', 'Dz'],\n// Disabled as it conflicts with German and Latin.\n// Slovak\n// ['ä', 'a'],\n// ['Ä', 'A'],\n// ['ľ', 'l'],\n// ['ĺ', 'l'],\n// ['ŕ', 'r'],\n// ['Ľ', 'L'],\n// ['Ĺ', 'L'],\n// ['Ŕ', 'R'],\n// Disabled as it conflicts with German and Latin.\n// Swedish\n// ['å', 'o'],\n// ['Å', 'o'],\n// ['ä', 'a'],\n// ['Ä', 'A'],\n// ['ë', 'e'],\n// ['Ë', 'E'],\n// ['ö', 'o'],\n// ['Ö', 'O'],\n// Ukrainian\n['Є', 'Ye'], ['І', 'I'], ['Ї', 'Yi'], ['Ґ', 'G'], ['є', 'ye'], ['і', 'i'], ['ї', 'yi'], ['ґ', 'g'], // Dutch\n['Ĳ', 'IJ'], ['ĳ', 'ij'], // Danish\n// ['Æ', 'Ae'],\n// ['Ø', 'Oe'],\n// ['Å', 'Aa'],\n// ['æ', 'ae'],\n// ['ø', 'oe'],\n// ['å', 'aa']\n// Currencies\n['¢', 'c'], ['¥', 'Y'], ['߿', 'b'], ['৳', 't'], ['૱', 'Bo'], ['฿', 'B'], ['₠', 'CE'], ['₡', 'C'], ['₢', 'Cr'], ['₣', 'F'], ['₥', 'm'], ['₦', 'N'], ['₧', 'Pt'], ['₨', 'Rs'], ['₩', 'W'], ['₫', 's'], ['€', 'E'], ['₭', 'K'], ['₮', 'T'], ['₯', 'Dp'], ['₰', 'S'], ['₱', 'P'], ['₲', 'G'], ['₳', 'A'], ['₴', 'S'], ['₵', 'C'], ['₶', 'tt'], ['₷', 'S'], ['₸', 'T'], ['₹', 'R'], ['₺', 'L'], ['₽', 'P'], ['₿', 'B'], ['﹩', '$'], ['￠', 'c'], ['￥', 'Y'], ['￦', 'W'], // Latin\n['𝐀', 'A'], ['𝐁', 'B'], ['𝐂', 'C'], ['𝐃', 'D'], ['𝐄', 'E'], ['𝐅', 'F'], ['𝐆', 'G'], ['𝐇', 'H'], ['𝐈', 'I'], ['𝐉', 'J'], ['𝐊', 'K'], ['𝐋', 'L'], ['𝐌', 'M'], ['𝐍', 'N'], ['𝐎', 'O'], ['𝐏', 'P'], ['𝐐', 'Q'], ['𝐑', 'R'], ['𝐒', 'S'], ['𝐓', 'T'], ['𝐔', 'U'], ['𝐕', 'V'], ['𝐖', 'W'], ['𝐗', 'X'], ['𝐘', 'Y'], ['𝐙', 'Z'], ['𝐚', 'a'], ['𝐛', 'b'], ['𝐜', 'c'], ['𝐝', 'd'], ['𝐞', 'e'], ['𝐟', 'f'], ['𝐠', 'g'], ['𝐡', 'h'], ['𝐢', 'i'], ['𝐣', 'j'], ['𝐤', 'k'], ['𝐥', 'l'], ['𝐦', 'm'], ['𝐧', 'n'], ['𝐨', 'o'], ['𝐩', 'p'], ['𝐪', 'q'], ['𝐫', 'r'], ['𝐬', 's'], ['𝐭', 't'], ['𝐮', 'u'], ['𝐯', 'v'], ['𝐰', 'w'], ['𝐱', 'x'], ['𝐲', 'y'], ['𝐳', 'z'], ['𝐴', 'A'], ['𝐵', 'B'], ['𝐶', 'C'], ['𝐷', 'D'], ['𝐸', 'E'], ['𝐹', 'F'], ['𝐺', 'G'], ['𝐻', 'H'], ['𝐼', 'I'], ['𝐽', 'J'], ['𝐾', 'K'], ['𝐿', 'L'], ['𝑀', 'M'], ['𝑁', 'N'], ['𝑂', 'O'], ['𝑃', 'P'], ['𝑄', 'Q'], ['𝑅', 'R'], ['𝑆', 'S'], ['𝑇', 'T'], ['𝑈', 'U'], ['𝑉', 'V'], ['𝑊', 'W'], ['𝑋', 'X'], ['𝑌', 'Y'], ['𝑍', 'Z'], ['𝑎', 'a'], ['𝑏', 'b'], ['𝑐', 'c'], ['𝑑', 'd'], ['𝑒', 'e'], ['𝑓', 'f'], ['𝑔', 'g'], ['𝑖', 'i'], ['𝑗', 'j'], ['𝑘', 'k'], ['𝑙', 'l'], ['𝑚', 'm'], ['𝑛', 'n'], ['𝑜', 'o'], ['𝑝', 'p'], ['𝑞', 'q'], ['𝑟', 'r'], ['𝑠', 's'], ['𝑡', 't'], ['𝑢', 'u'], ['𝑣', 'v'], ['𝑤', 'w'], ['𝑥', 'x'], ['𝑦', 'y'], ['𝑧', 'z'], ['𝑨', 'A'], ['𝑩', 'B'], ['𝑪', 'C'], ['𝑫', 'D'], ['𝑬', 'E'], ['𝑭', 'F'], ['𝑮', 'G'], ['𝑯', 'H'], ['𝑰', 'I'], ['𝑱', 'J'], ['𝑲', 'K'], ['𝑳', 'L'], ['𝑴', 'M'], ['𝑵', 'N'], ['𝑶', 'O'], ['𝑷', 'P'], ['𝑸', 'Q'], ['𝑹', 'R'], ['𝑺', 'S'], ['𝑻', 'T'], ['𝑼', 'U'], ['𝑽', 'V'], ['𝑾', 'W'], ['𝑿', 'X'], ['𝒀', 'Y'], ['𝒁', 'Z'], ['𝒂', 'a'], ['𝒃', 'b'], ['𝒄', 'c'], ['𝒅', 'd'], ['𝒆', 'e'], ['𝒇', 'f'], ['𝒈', 'g'], ['𝒉', 'h'], ['𝒊', 'i'], ['𝒋', 'j'], ['𝒌', 'k'], ['𝒍', 'l'], ['𝒎', 'm'], ['𝒏', 'n'], ['𝒐', 'o'], ['𝒑', 'p'], ['𝒒', 'q'], ['𝒓', 'r'], ['𝒔', 's'], ['𝒕', 't'], ['𝒖', 'u'], ['𝒗', 'v'], ['𝒘', 'w'], ['𝒙', 'x'], ['𝒚', 'y'], ['𝒛', 'z'], ['𝒜', 'A'], ['𝒞', 'C'], ['𝒟', 'D'], ['𝒢', 'g'], ['𝒥', 'J'], ['𝒦', 'K'], ['𝒩', 'N'], ['𝒪', 'O'], ['𝒫', 'P'], ['𝒬', 'Q'], ['𝒮', 'S'], ['𝒯', 'T'], ['𝒰', 'U'], ['𝒱', 'V'], ['𝒲', 'W'], ['𝒳', 'X'], ['𝒴', 'Y'], ['𝒵', 'Z'], ['𝒶', 'a'], ['𝒷', 'b'], ['𝒸', 'c'], ['𝒹', 'd'], ['𝒻', 'f'], ['𝒽', 'h'], ['𝒾', 'i'], ['𝒿', 'j'], ['𝓀', 'h'], ['𝓁', 'l'], ['𝓂', 'm'], ['𝓃', 'n'], ['𝓅', 'p'], ['𝓆', 'q'], ['𝓇', 'r'], ['𝓈', 's'], ['𝓉', 't'], ['𝓊', 'u'], ['𝓋', 'v'], ['𝓌', 'w'], ['𝓍', 'x'], ['𝓎', 'y'], ['𝓏', 'z'], ['𝓐', 'A'], ['𝓑', 'B'], ['𝓒', 'C'], ['𝓓', 'D'], ['𝓔', 'E'], ['𝓕', 'F'], ['𝓖', 'G'], ['𝓗', 'H'], ['𝓘', 'I'], ['𝓙', 'J'], ['𝓚', 'K'], ['𝓛', 'L'], ['𝓜', 'M'], ['𝓝', 'N'], ['𝓞', 'O'], ['𝓟', 'P'], ['𝓠', 'Q'], ['𝓡', 'R'], ['𝓢', 'S'], ['𝓣', 'T'], ['𝓤', 'U'], ['𝓥', 'V'], ['𝓦', 'W'], ['𝓧', 'X'], ['𝓨', 'Y'], ['𝓩', 'Z'], ['𝓪', 'a'], ['𝓫', 'b'], ['𝓬', 'c'], ['𝓭', 'd'], ['𝓮', 'e'], ['𝓯', 'f'], ['𝓰', 'g'], ['𝓱', 'h'], ['𝓲', 'i'], ['𝓳', 'j'], ['𝓴', 'k'], ['𝓵', 'l'], ['𝓶', 'm'], ['𝓷', 'n'], ['𝓸', 'o'], ['𝓹', 'p'], ['𝓺', 'q'], ['𝓻', 'r'], ['𝓼', 's'], ['𝓽', 't'], ['𝓾', 'u'], ['𝓿', 'v'], ['𝔀', 'w'], ['𝔁', 'x'], ['𝔂', 'y'], ['𝔃', 'z'], ['𝔄', 'A'], ['𝔅', 'B'], ['𝔇', 'D'], ['𝔈', 'E'], ['𝔉', 'F'], ['𝔊', 'G'], ['𝔍', 'J'], ['𝔎', 'K'], ['𝔏', 'L'], ['𝔐', 'M'], ['𝔑', 'N'], ['𝔒', 'O'], ['𝔓', 'P'], ['𝔔', 'Q'], ['𝔖', 'S'], ['𝔗', 'T'], ['𝔘', 'U'], ['𝔙', 'V'], ['𝔚', 'W'], ['𝔛', 'X'], ['𝔜', 'Y'], ['𝔞', 'a'], ['𝔟', 'b'], ['𝔠', 'c'], ['𝔡', 'd'], ['𝔢', 'e'], ['𝔣', 'f'], ['𝔤', 'g'], ['𝔥', 'h'], ['𝔦', 'i'], ['𝔧', 'j'], ['𝔨', 'k'], ['𝔩', 'l'], ['𝔪', 'm'], ['𝔫', 'n'], ['𝔬', 'o'], ['𝔭', 'p'], ['𝔮', 'q'], ['𝔯', 'r'], ['𝔰', 's'], ['𝔱', 't'], ['𝔲', 'u'], ['𝔳', 'v'], ['𝔴', 'w'], ['𝔵', 'x'], ['𝔶', 'y'], ['𝔷', 'z'], ['𝔸', 'A'], ['𝔹', 'B'], ['𝔻', 'D'], ['𝔼', 'E'], ['𝔽', 'F'], ['𝔾', 'G'], ['𝕀', 'I'], ['𝕁', 'J'], ['𝕂', 'K'], ['𝕃', 'L'], ['𝕄', 'M'], ['𝕆', 'N'], ['𝕊', 'S'], ['𝕋', 'T'], ['𝕌', 'U'], ['𝕍', 'V'], ['𝕎', 'W'], ['𝕏', 'X'], ['𝕐', 'Y'], ['𝕒', 'a'], ['𝕓', 'b'], ['𝕔', 'c'], ['𝕕', 'd'], ['𝕖', 'e'], ['𝕗', 'f'], ['𝕘', 'g'], ['𝕙', 'h'], ['𝕚', 'i'], ['𝕛', 'j'], ['𝕜', 'k'], ['𝕝', 'l'], ['𝕞', 'm'], ['𝕟', 'n'], ['𝕠', 'o'], ['𝕡', 'p'], ['𝕢', 'q'], ['𝕣', 'r'], ['𝕤', 's'], ['𝕥', 't'], ['𝕦', 'u'], ['𝕧', 'v'], ['𝕨', 'w'], ['𝕩', 'x'], ['𝕪', 'y'], ['𝕫', 'z'], ['𝕬', 'A'], ['𝕭', 'B'], ['𝕮', 'C'], ['𝕯', 'D'], ['𝕰', 'E'], ['𝕱', 'F'], ['𝕲', 'G'], ['𝕳', 'H'], ['𝕴', 'I'], ['𝕵', 'J'], ['𝕶', 'K'], ['𝕷', 'L'], ['𝕸', 'M'], ['𝕹', 'N'], ['𝕺', 'O'], ['𝕻', 'P'], ['𝕼', 'Q'], ['𝕽', 'R'], ['𝕾', 'S'], ['𝕿', 'T'], ['𝖀', 'U'], ['𝖁', 'V'], ['𝖂', 'W'], ['𝖃', 'X'], ['𝖄', 'Y'], ['𝖅', 'Z'], ['𝖆', 'a'], ['𝖇', 'b'], ['𝖈', 'c'], ['𝖉', 'd'], ['𝖊', 'e'], ['𝖋', 'f'], ['𝖌', 'g'], ['𝖍', 'h'], ['𝖎', 'i'], ['𝖏', 'j'], ['𝖐', 'k'], ['𝖑', 'l'], ['𝖒', 'm'], ['𝖓', 'n'], ['𝖔', 'o'], ['𝖕', 'p'], ['𝖖', 'q'], ['𝖗', 'r'], ['𝖘', 's'], ['𝖙', 't'], ['𝖚', 'u'], ['𝖛', 'v'], ['𝖜', 'w'], ['𝖝', 'x'], ['𝖞', 'y'], ['𝖟', 'z'], ['𝖠', 'A'], ['𝖡', 'B'], ['𝖢', 'C'], ['𝖣', 'D'], ['𝖤', 'E'], ['𝖥', 'F'], ['𝖦', 'G'], ['𝖧', 'H'], ['𝖨', 'I'], ['𝖩', 'J'], ['𝖪', 'K'], ['𝖫', 'L'], ['𝖬', 'M'], ['𝖭', 'N'], ['𝖮', 'O'], ['𝖯', 'P'], ['𝖰', 'Q'], ['𝖱', 'R'], ['𝖲', 'S'], ['𝖳', 'T'], ['𝖴', 'U'], ['𝖵', 'V'], ['𝖶', 'W'], ['𝖷', 'X'], ['𝖸', 'Y'], ['𝖹', 'Z'], ['𝖺', 'a'], ['𝖻', 'b'], ['𝖼', 'c'], ['𝖽', 'd'], ['𝖾', 'e'], ['𝖿', 'f'], ['𝗀', 'g'], ['𝗁', 'h'], ['𝗂', 'i'], ['𝗃', 'j'], ['𝗄', 'k'], ['𝗅', 'l'], ['𝗆', 'm'], ['𝗇', 'n'], ['𝗈', 'o'], ['𝗉', 'p'], ['𝗊', 'q'], ['𝗋', 'r'], ['𝗌', 's'], ['𝗍', 't'], ['𝗎', 'u'], ['𝗏', 'v'], ['𝗐', 'w'], ['𝗑', 'x'], ['𝗒', 'y'], ['𝗓', 'z'], ['𝗔', 'A'], ['𝗕', 'B'], ['𝗖', 'C'], ['𝗗', 'D'], ['𝗘', 'E'], ['𝗙', 'F'], ['𝗚', 'G'], ['𝗛', 'H'], ['𝗜', 'I'], ['𝗝', 'J'], ['𝗞', 'K'], ['𝗟', 'L'], ['𝗠', 'M'], ['𝗡', 'N'], ['𝗢', 'O'], ['𝗣', 'P'], ['𝗤', 'Q'], ['𝗥', 'R'], ['𝗦', 'S'], ['𝗧', 'T'], ['𝗨', 'U'], ['𝗩', 'V'], ['𝗪', 'W'], ['𝗫', 'X'], ['𝗬', 'Y'], ['𝗭', 'Z'], ['𝗮', 'a'], ['𝗯', 'b'], ['𝗰', 'c'], ['𝗱', 'd'], ['𝗲', 'e'], ['𝗳', 'f'], ['𝗴', 'g'], ['𝗵', 'h'], ['𝗶', 'i'], ['𝗷', 'j'], ['𝗸', 'k'], ['𝗹', 'l'], ['𝗺', 'm'], ['𝗻', 'n'], ['𝗼', 'o'], ['𝗽', 'p'], ['𝗾', 'q'], ['𝗿', 'r'], ['𝘀', 's'], ['𝘁', 't'], ['𝘂', 'u'], ['𝘃', 'v'], ['𝘄', 'w'], ['𝘅', 'x'], ['𝘆', 'y'], ['𝘇', 'z'], ['𝘈', 'A'], ['𝘉', 'B'], ['𝘊', 'C'], ['𝘋', 'D'], ['𝘌', 'E'], ['𝘍', 'F'], ['𝘎', 'G'], ['𝘏', 'H'], ['𝘐', 'I'], ['𝘑', 'J'], ['𝘒', 'K'], ['𝘓', 'L'], ['𝘔', 'M'], ['𝘕', 'N'], ['𝘖', 'O'], ['𝘗', 'P'], ['𝘘', 'Q'], ['𝘙', 'R'], ['𝘚', 'S'], ['𝘛', 'T'], ['𝘜', 'U'], ['𝘝', 'V'], ['𝘞', 'W'], ['𝘟', 'X'], ['𝘠', 'Y'], ['𝘡', 'Z'], ['𝘢', 'a'], ['𝘣', 'b'], ['𝘤', 'c'], ['𝘥', 'd'], ['𝘦', 'e'], ['𝘧', 'f'], ['𝘨', 'g'], ['𝘩', 'h'], ['𝘪', 'i'], ['𝘫', 'j'], ['𝘬', 'k'], ['𝘭', 'l'], ['𝘮', 'm'], ['𝘯', 'n'], ['𝘰', 'o'], ['𝘱', 'p'], ['𝘲', 'q'], ['𝘳', 'r'], ['𝘴', 's'], ['𝘵', 't'], ['𝘶', 'u'], ['𝘷', 'v'], ['𝘸', 'w'], ['𝘹', 'x'], ['𝘺', 'y'], ['𝘻', 'z'], ['𝘼', 'A'], ['𝘽', 'B'], ['𝘾', 'C'], ['𝘿', 'D'], ['𝙀', 'E'], ['𝙁', 'F'], ['𝙂', 'G'], ['𝙃', 'H'], ['𝙄', 'I'], ['𝙅', 'J'], ['𝙆', 'K'], ['𝙇', 'L'], ['𝙈', 'M'], ['𝙉', 'N'], ['𝙊', 'O'], ['𝙋', 'P'], ['𝙌', 'Q'], ['𝙍', 'R'], ['𝙎', 'S'], ['𝙏', 'T'], ['𝙐', 'U'], ['𝙑', 'V'], ['𝙒', 'W'], ['𝙓', 'X'], ['𝙔', 'Y'], ['𝙕', 'Z'], ['𝙖', 'a'], ['𝙗', 'b'], ['𝙘', 'c'], ['𝙙', 'd'], ['𝙚', 'e'], ['𝙛', 'f'], ['𝙜', 'g'], ['𝙝', 'h'], ['𝙞', 'i'], ['𝙟', 'j'], ['𝙠', 'k'], ['𝙡', 'l'], ['𝙢', 'm'], ['𝙣', 'n'], ['𝙤', 'o'], ['𝙥', 'p'], ['𝙦', 'q'], ['𝙧', 'r'], ['𝙨', 's'], ['𝙩', 't'], ['𝙪', 'u'], ['𝙫', 'v'], ['𝙬', 'w'], ['𝙭', 'x'], ['𝙮', 'y'], ['𝙯', 'z'], ['𝙰', 'A'], ['𝙱', 'B'], ['𝙲', 'C'], ['𝙳', 'D'], ['𝙴', 'E'], ['𝙵', 'F'], ['𝙶', 'G'], ['𝙷', 'H'], ['𝙸', 'I'], ['𝙹', 'J'], ['𝙺', 'K'], ['𝙻', 'L'], ['𝙼', 'M'], ['𝙽', 'N'], ['𝙾', 'O'], ['𝙿', 'P'], ['𝚀', 'Q'], ['𝚁', 'R'], ['𝚂', 'S'], ['𝚃', 'T'], ['𝚄', 'U'], ['𝚅', 'V'], ['𝚆', 'W'], ['𝚇', 'X'], ['𝚈', 'Y'], ['𝚉', 'Z'], ['𝚊', 'a'], ['𝚋', 'b'], ['𝚌', 'c'], ['𝚍', 'd'], ['𝚎', 'e'], ['𝚏', 'f'], ['𝚐', 'g'], ['𝚑', 'h'], ['𝚒', 'i'], ['𝚓', 'j'], ['𝚔', 'k'], ['𝚕', 'l'], ['𝚖', 'm'], ['𝚗', 'n'], ['𝚘', 'o'], ['𝚙', 'p'], ['𝚚', 'q'], ['𝚛', 'r'], ['𝚜', 's'], ['𝚝', 't'], ['𝚞', 'u'], ['𝚟', 'v'], ['𝚠', 'w'], ['𝚡', 'x'], ['𝚢', 'y'], ['𝚣', 'z'], // Dotless letters\n['𝚤', 'l'], ['𝚥', 'j'], // Greek\n['𝛢', 'A'], ['𝛣', 'B'], ['𝛤', 'G'], ['𝛥', 'D'], ['𝛦', 'E'], ['𝛧', 'Z'], ['𝛨', 'I'], ['𝛩', 'TH'], ['𝛪', 'I'], ['𝛫', 'K'], ['𝛬', 'L'], ['𝛭', 'M'], ['𝛮', 'N'], ['𝛯', 'KS'], ['𝛰', 'O'], ['𝛱', 'P'], ['𝛲', 'R'], ['𝛳', 'TH'], ['𝛴', 'S'], ['𝛵', 'T'], ['𝛶', 'Y'], ['𝛷', 'F'], ['𝛸', 'x'], ['𝛹', 'PS'], ['𝛺', 'O'], ['𝛻', 'D'], ['𝛼', 'a'], ['𝛽', 'b'], ['𝛾', 'g'], ['𝛿', 'd'], ['𝜀', 'e'], ['𝜁', 'z'], ['𝜂', 'i'], ['𝜃', 'th'], ['𝜄', 'i'], ['𝜅', 'k'], ['𝜆', 'l'], ['𝜇', 'm'], ['𝜈', 'n'], ['𝜉', 'ks'], ['𝜊', 'o'], ['𝜋', 'p'], ['𝜌', 'r'], ['𝜍', 's'], ['𝜎', 's'], ['𝜏', 't'], ['𝜐', 'y'], ['𝜑', 'f'], ['𝜒', 'x'], ['𝜓', 'ps'], ['𝜔', 'o'], ['𝜕', 'd'], ['𝜖', 'E'], ['𝜗', 'TH'], ['𝜘', 'K'], ['𝜙', 'f'], ['𝜚', 'r'], ['𝜛', 'p'], ['𝜜', 'A'], ['𝜝', 'V'], ['𝜞', 'G'], ['𝜟', 'D'], ['𝜠', 'E'], ['𝜡', 'Z'], ['𝜢', 'I'], ['𝜣', 'TH'], ['𝜤', 'I'], ['𝜥', 'K'], ['𝜦', 'L'], ['𝜧', 'M'], ['𝜨', 'N'], ['𝜩', 'KS'], ['𝜪', 'O'], ['𝜫', 'P'], ['𝜬', 'S'], ['𝜭', 'TH'], ['𝜮', 'S'], ['𝜯', 'T'], ['𝜰', 'Y'], ['𝜱', 'F'], ['𝜲', 'X'], ['𝜳', 'PS'], ['𝜴', 'O'], ['𝜵', 'D'], ['𝜶', 'a'], ['𝜷', 'v'], ['𝜸', 'g'], ['𝜹', 'd'], ['𝜺', 'e'], ['𝜻', 'z'], ['𝜼', 'i'], ['𝜽', 'th'], ['𝜾', 'i'], ['𝜿', 'k'], ['𝝀', 'l'], ['𝝁', 'm'], ['𝝂', 'n'], ['𝝃', 'ks'], ['𝝄', 'o'], ['𝝅', 'p'], ['𝝆', 'r'], ['𝝇', 's'], ['𝝈', 's'], ['𝝉', 't'], ['𝝊', 'y'], ['𝝋', 'f'], ['𝝌', 'x'], ['𝝍', 'ps'], ['𝝎', 'o'], ['𝝏', 'a'], ['𝝐', 'e'], ['𝝑', 'i'], ['𝝒', 'k'], ['𝝓', 'f'], ['𝝔', 'r'], ['𝝕', 'p'], ['𝝖', 'A'], ['𝝗', 'B'], ['𝝘', 'G'], ['𝝙', 'D'], ['𝝚', 'E'], ['𝝛', 'Z'], ['𝝜', 'I'], ['𝝝', 'TH'], ['𝝞', 'I'], ['𝝟', 'K'], ['𝝠', 'L'], ['𝝡', 'M'], ['𝝢', 'N'], ['𝝣', 'KS'], ['𝝤', 'O'], ['𝝥', 'P'], ['𝝦', 'R'], ['𝝧', 'TH'], ['𝝨', 'S'], ['𝝩', 'T'], ['𝝪', 'Y'], ['𝝫', 'F'], ['𝝬', 'X'], ['𝝭', 'PS'], ['𝝮', 'O'], ['𝝯', 'D'], ['𝝰', 'a'], ['𝝱', 'v'], ['𝝲', 'g'], ['𝝳', 'd'], ['𝝴', 'e'], ['𝝵', 'z'], ['𝝶', 'i'], ['𝝷', 'th'], ['𝝸', 'i'], ['𝝹', 'k'], ['𝝺', 'l'], ['𝝻', 'm'], ['𝝼', 'n'], ['𝝽', 'ks'], ['𝝾', 'o'], ['𝝿', 'p'], ['𝞀', 'r'], ['𝞁', 's'], ['𝞂', 's'], ['𝞃', 't'], ['𝞄', 'y'], ['𝞅', 'f'], ['𝞆', 'x'], ['𝞇', 'ps'], ['𝞈', 'o'], ['𝞉', 'a'], ['𝞊', 'e'], ['𝞋', 'i'], ['𝞌', 'k'], ['𝞍', 'f'], ['𝞎', 'r'], ['𝞏', 'p'], ['𝞐', 'A'], ['𝞑', 'V'], ['𝞒', 'G'], ['𝞓', 'D'], ['𝞔', 'E'], ['𝞕', 'Z'], ['𝞖', 'I'], ['𝞗', 'TH'], ['𝞘', 'I'], ['𝞙', 'K'], ['𝞚', 'L'], ['𝞛', 'M'], ['𝞜', 'N'], ['𝞝', 'KS'], ['𝞞', 'O'], ['𝞟', 'P'], ['𝞠', 'S'], ['𝞡', 'TH'], ['𝞢', 'S'], ['𝞣', 'T'], ['𝞤', 'Y'], ['𝞥', 'F'], ['𝞦', 'X'], ['𝞧', 'PS'], ['𝞨', 'O'], ['𝞩', 'D'], ['𝞪', 'av'], ['𝞫', 'g'], ['𝞬', 'd'], ['𝞭', 'e'], ['𝞮', 'z'], ['𝞯', 'i'], ['𝞰', 'i'], ['𝞱', 'th'], ['𝞲', 'i'], ['𝞳', 'k'], ['𝞴', 'l'], ['𝞵', 'm'], ['𝞶', 'n'], ['𝞷', 'ks'], ['𝞸', 'o'], ['𝞹', 'p'], ['𝞺', 'r'], ['𝞻', 's'], ['𝞼', 's'], ['𝞽', 't'], ['𝞾', 'y'], ['𝞿', 'f'], ['𝟀', 'x'], ['𝟁', 'ps'], ['𝟂', 'o'], ['𝟃', 'a'], ['𝟄', 'e'], ['𝟅', 'i'], ['𝟆', 'k'], ['𝟇', 'f'], ['𝟈', 'r'], ['𝟉', 'p'], ['𝟊', 'F'], ['𝟋', 'f'], ['⒜', '(a)'], ['⒝', '(b)'], ['⒞', '(c)'], ['⒟', '(d)'], ['⒠', '(e)'], ['⒡', '(f)'], ['⒢', '(g)'], ['⒣', '(h)'], ['⒤', '(i)'], ['⒥', '(j)'], ['⒦', '(k)'], ['⒧', '(l)'], ['⒨', '(m)'], ['⒩', '(n)'], ['⒪', '(o)'], ['⒫', '(p)'], ['⒬', '(q)'], ['⒭', '(r)'], ['⒮', '(s)'], ['⒯', '(t)'], ['⒰', '(u)'], ['⒱', '(v)'], ['⒲', '(w)'], ['⒳', '(x)'], ['⒴', '(y)'], ['⒵', '(z)'], ['Ⓐ', '(A)'], ['Ⓑ', '(B)'], ['Ⓒ', '(C)'], ['Ⓓ', '(D)'], ['Ⓔ', '(E)'], ['Ⓕ', '(F)'], ['Ⓖ', '(G)'], ['Ⓗ', '(H)'], ['Ⓘ', '(I)'], ['Ⓙ', '(J)'], ['Ⓚ', '(K)'], ['Ⓛ', '(L)'], ['Ⓝ', '(N)'], ['Ⓞ', '(O)'], ['Ⓟ', '(P)'], ['Ⓠ', '(Q)'], ['Ⓡ', '(R)'], ['Ⓢ', '(S)'], ['Ⓣ', '(T)'], ['Ⓤ', '(U)'], ['Ⓥ', '(V)'], ['Ⓦ', '(W)'], ['Ⓧ', '(X)'], ['Ⓨ', '(Y)'], ['Ⓩ', '(Z)'], ['ⓐ', '(a)'], ['ⓑ', '(b)'], ['ⓒ', '(b)'], ['ⓓ', '(c)'], ['ⓔ', '(e)'], ['ⓕ', '(f)'], ['ⓖ', '(g)'], ['ⓗ', '(h)'], ['ⓘ', '(i)'], ['ⓙ', '(j)'], ['ⓚ', '(k)'], ['ⓛ', '(l)'], ['ⓜ', '(m)'], ['ⓝ', '(n)'], ['ⓞ', '(o)'], ['ⓟ', '(p)'], ['ⓠ', '(q)'], ['ⓡ', '(r)'], ['ⓢ', '(s)'], ['ⓣ', '(t)'], ['ⓤ', '(u)'], ['ⓥ', '(v)'], ['ⓦ', '(w)'], ['ⓧ', '(x)'], ['ⓨ', '(y)'], ['ⓩ', '(z)'], // Numbers\n['𝟎', '0'], ['𝟏', '1'], ['𝟐', '2'], ['𝟑', '3'], ['𝟒', '4'], ['𝟓', '5'], ['𝟔', '6'], ['𝟕', '7'], ['𝟖', '8'], ['𝟗', '9'], ['𝟘', '0'], ['𝟙', '1'], ['𝟚', '2'], ['𝟛', '3'], ['𝟜', '4'], ['𝟝', '5'], ['𝟞', '6'], ['𝟟', '7'], ['𝟠', '8'], ['𝟡', '9'], ['𝟢', '0'], ['𝟣', '1'], ['𝟤', '2'], ['𝟥', '3'], ['𝟦', '4'], ['𝟧', '5'], ['𝟨', '6'], ['𝟩', '7'], ['𝟪', '8'], ['𝟫', '9'], ['𝟬', '0'], ['𝟭', '1'], ['𝟮', '2'], ['𝟯', '3'], ['𝟰', '4'], ['𝟱', '5'], ['𝟲', '6'], ['𝟳', '7'], ['𝟴', '8'], ['𝟵', '9'], ['𝟶', '0'], ['𝟷', '1'], ['𝟸', '2'], ['𝟹', '3'], ['𝟺', '4'], ['𝟻', '5'], ['𝟼', '6'], ['𝟽', '7'], ['𝟾', '8'], ['𝟿', '9'], ['①', '1'], ['②', '2'], ['③', '3'], ['④', '4'], ['⑤', '5'], ['⑥', '6'], ['⑦', '7'], ['⑧', '8'], ['⑨', '9'], ['⑩', '10'], ['⑪', '11'], ['⑫', '12'], ['⑬', '13'], ['⑭', '14'], ['⑮', '15'], ['⑯', '16'], ['⑰', '17'], ['⑱', '18'], ['⑲', '19'], ['⑳', '20'], ['⑴', '1'], ['⑵', '2'], ['⑶', '3'], ['⑷', '4'], ['⑸', '5'], ['⑹', '6'], ['⑺', '7'], ['⑻', '8'], ['⑼', '9'], ['⑽', '10'], ['⑾', '11'], ['⑿', '12'], ['⒀', '13'], ['⒁', '14'], ['⒂', '15'], ['⒃', '16'], ['⒄', '17'], ['⒅', '18'], ['⒆', '19'], ['⒇', '20'], ['⒈', '1.'], ['⒉', '2.'], ['⒊', '3.'], ['⒋', '4.'], ['⒌', '5.'], ['⒍', '6.'], ['⒎', '7.'], ['⒏', '8.'], ['⒐', '9.'], ['⒑', '10.'], ['⒒', '11.'], ['⒓', '12.'], ['⒔', '13.'], ['⒕', '14.'], ['⒖', '15.'], ['⒗', '16.'], ['⒘', '17.'], ['⒙', '18.'], ['⒚', '19.'], ['⒛', '20.'], ['⓪', '0'], ['⓫', '11'], ['⓬', '12'], ['⓭', '13'], ['⓮', '14'], ['⓯', '15'], ['⓰', '16'], ['⓱', '17'], ['⓲', '18'], ['⓳', '19'], ['⓴', '20'], ['⓵', '1'], ['⓶', '2'], ['⓷', '3'], ['⓸', '4'], ['⓹', '5'], ['⓺', '6'], ['⓻', '7'], ['⓼', '8'], ['⓽', '9'], ['⓾', '10'], ['⓿', '0'], // Punctuation\n['🙰', '&'], ['🙱', '&'], ['🙲', '&'], ['🙳', '&'], ['🙴', '&'], ['🙵', '&'], ['🙶', '\"'], ['🙷', '\"'], ['🙸', '\"'], ['‽', '?!'], ['🙹', '?!'], ['🙺', '?!'], ['🙻', '?!'], ['🙼', '/'], ['🙽', '\\\\'], // Alchemy\n['🜇', 'AR'], ['🜈', 'V'], ['🜉', 'V'], ['🜆', 'VR'], ['🜅', 'VF'], ['🜩', '2'], ['🜪', '5'], ['🝡', 'f'], ['🝢', 'W'], ['🝣', 'U'], ['🝧', 'V'], ['🝨', 'T'], ['🝪', 'V'], ['🝫', 'MB'], ['🝬', 'VB'], ['🝲', '3B'], ['🝳', '3B'], // Emojis\n['💯', '100'], ['🔙', 'BACK'], ['🔚', 'END'], ['🔛', 'ON!'], ['🔜', 'SOON'], ['🔝', 'TOP'], ['🔞', '18'], ['🔤', 'abc'], ['🔠', 'ABCD'], ['🔡', 'abcd'], ['🔢', '1234'], ['🔣', 'T&@%'], ['#️⃣', '#'], ['*️⃣', '*'], ['0️⃣', '0'], ['1️⃣', '1'], ['2️⃣', '2'], ['3️⃣', '3'], ['4️⃣', '4'], ['5️⃣', '5'], ['6️⃣', '6'], ['7️⃣', '7'], ['8️⃣', '8'], ['9️⃣', '9'], ['🔟', '10'], ['🅰️', 'A'], ['🅱️', 'B'], ['🆎', 'AB'], ['🆑', 'CL'], ['🅾️', 'O'], ['🅿', 'P'], ['🆘', 'SOS'], ['🅲', 'C'], ['🅳', 'D'], ['🅴', 'E'], ['🅵', 'F'], ['🅶', 'G'], ['🅷', 'H'], ['🅸', 'I'], ['🅹', 'J'], ['🅺', 'K'], ['🅻', 'L'], ['🅼', 'M'], ['🅽', 'N'], ['🆀', 'Q'], ['🆁', 'R'], ['🆂', 'S'], ['🆃', 'T'], ['🆄', 'U'], ['🆅', 'V'], ['🆆', 'W'], ['🆇', 'X'], ['🆈', 'Y'], ['🆉', 'Z']];\nexport default replacements;","import _toConsumableArray from \"/home/runner/work/yuzhouu.github.io/yuzhouu.github.io/site/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/runner/work/yuzhouu.github.io/yuzhouu.github.io/site/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/runner/work/yuzhouu.github.io/yuzhouu.github.io/site/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport deburr from 'lodash.deburr';\nimport escapeStringRegexp from 'escape-string-regexp';\nimport builtinReplacements from './replacements.js';\n\nvar doCustomReplacements = function doCustomReplacements(string, replacements) {\n  var _iterator = _createForOfIteratorHelper(replacements),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          key = _step$value[0],\n          value = _step$value[1];\n\n      // TODO: Use `String#replaceAll()` when targeting Node.js 16.\n      string = string.replace(new RegExp(escapeStringRegexp(key), 'g'), value);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return string;\n};\n\nexport default function transliterate(string, options) {\n  if (typeof string !== 'string') {\n    throw new TypeError(\"Expected a string, got `\".concat(typeof string, \"`\"));\n  }\n\n  options = _objectSpread({\n    customReplacements: []\n  }, options);\n  var customReplacements = new Map([].concat(_toConsumableArray(builtinReplacements), _toConsumableArray(options.customReplacements)));\n  string = string.normalize();\n  string = doCustomReplacements(string, customReplacements);\n  string = deburr(string);\n  return string;\n}","var overridableReplacements = [['&', ' and '], ['🦄', ' unicorn '], ['♥', ' love ']];\nexport default overridableReplacements;","import _toConsumableArray from \"/home/runner/work/yuzhouu.github.io/yuzhouu.github.io/site/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/runner/work/yuzhouu.github.io/yuzhouu.github.io/site/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport escapeStringRegexp from 'escape-string-regexp';\nimport transliterate from '@sindresorhus/transliterate';\nimport builtinOverridableReplacements from './overridable-replacements.js';\n\nvar decamelize = function decamelize(string) {\n  return string // Separate capitalized words.\n  .replace(/([A-Z]{2,})(\\d+)/g, '$1 $2').replace(/([a-z\\d]+)([A-Z]{2,})/g, '$1 $2').replace(/([a-z\\d])([A-Z])/g, '$1 $2').replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1 $2');\n};\n\nvar removeMootSeparators = function removeMootSeparators(string, separator) {\n  var escapedSeparator = escapeStringRegexp(separator);\n  return string.replace(new RegExp(\"\".concat(escapedSeparator, \"{2,}\"), 'g'), separator).replace(new RegExp(\"^\".concat(escapedSeparator, \"|\").concat(escapedSeparator, \"$\"), 'g'), '');\n};\n\nexport default function slugify(string, options) {\n  if (typeof string !== 'string') {\n    throw new TypeError(\"Expected a string, got `\".concat(typeof string, \"`\"));\n  }\n\n  options = _objectSpread({\n    separator: '-',\n    lowercase: true,\n    decamelize: true,\n    customReplacements: [],\n    preserveLeadingUnderscore: false,\n    preserveTrailingDash: false\n  }, options);\n  var shouldPrependUnderscore = options.preserveLeadingUnderscore && string.startsWith('_');\n  var shouldAppendDash = options.preserveTrailingDash && string.endsWith('-');\n  var customReplacements = new Map([].concat(_toConsumableArray(builtinOverridableReplacements), _toConsumableArray(options.customReplacements)));\n  string = transliterate(string, {\n    customReplacements: customReplacements\n  });\n\n  if (options.decamelize) {\n    string = decamelize(string);\n  }\n\n  var patternSlug = /[^a-zA-Z\\d]+/g;\n\n  if (options.lowercase) {\n    string = string.toLowerCase();\n    patternSlug = /[^a-z\\d]+/g;\n  }\n\n  string = string.replace(patternSlug, options.separator);\n  string = string.replace(/\\\\/g, '');\n\n  if (options.separator) {\n    string = removeMootSeparators(string, options.separator);\n  }\n\n  if (shouldPrependUnderscore) {\n    string = \"_\".concat(string);\n  }\n\n  if (shouldAppendDash) {\n    string = \"\".concat(string, \"-\");\n  }\n\n  return string;\n}\nexport function slugifyWithCounter() {\n  var occurrences = new Map();\n\n  var countable = function countable(string, options) {\n    string = slugify(string, options);\n\n    if (!string) {\n      return '';\n    }\n\n    var stringLower = string.toLowerCase();\n    var numberless = occurrences.get(stringLower.replace(/(?:-\\d+?)+?$/, '')) || 0;\n    var counter = occurrences.get(stringLower);\n    occurrences.set(stringLower, typeof counter === 'number' ? counter + 1 : 1);\n    var newCounter = occurrences.get(stringLower) || 2;\n\n    if (newCounter >= 2 || numberless > 2) {\n      string = \"\".concat(string, \"-\").concat(newCounter);\n    }\n\n    return string;\n  };\n\n  countable.reset = function () {\n    occurrences.clear();\n  };\n\n  return countable;\n}","export default function escapeStringRegexp(string) {\n  if (typeof string !== 'string') {\n    throw new TypeError('Expected a string');\n  } // Escape characters with special meaning either inside or outside character sets.\n  // Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\n\n  return string.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}","import styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport { memo } from 'react';\nimport slugify from '@sindresorhus/slugify';\n\ninterface Props {\n  tags: string[];\n}\n\nconst TagList = styled.ul`\n  margin: var(--spacing-0);\n  padding: var(--spacing-0);\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n\n  li {\n    list-style: none;\n\n    & + li {\n      margin-left: var(--spacing-2);\n    }\n\n    a {\n      display: inline-block;\n      padding: var(--spacing-0) var(--spacing-2);\n      text-decoration: none;\n      border: 1px solid var(--color-border);\n      border-radius: 3px;\n    }\n  }\n`;\n\nconst PostTags = ({ tags }: Props) => {\n  return (\n    <div className=\"d-flex\">\n      Tag: &nbsp;\n      <TagList>\n        {tags.map(tag => {\n          return (\n            <li key={tag}>\n              <Link to={`/blog/tags/${slugify(tag)}`}>{tag}</Link>\n            </li>\n          );\n        })}\n      </TagList>\n    </div>\n  );\n};\n\nexport default memo(PostTags);\n"],"names":["symbolTag","reLatin","reComboMark","RegExp","freeGlobal","g","Object","freeSelf","self","root","Function","object","deburrLetter","key","undefined","objectToString","prototype","toString","Symbol","symbolProto","symbolToString","baseToString","value","isObjectLike","call","isSymbol","result","module","exports","string","replace","author","useStaticQuery","site","siteMetadata","className","S","layout","formats","src","width","height","quality","alt","name","href","link","target","bio","GlobalWrapper","children","_slicedToArray","arr","i","Array","isArray","_i","iterator","_s","_e","_arr","_n","_d","next","done","push","length","err","unsupportedIterableToArray","TypeError","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_createForOfIteratorHelper","o","allowArrayLike","it","minLen","_arrayLikeToArray","n","slice","constructor","from","test","_unsupportedIterableToArray","F","s","e","f","normalCompletion","didErr","step","_e2","return","len","arr2","transliterate","options","concat","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","customReplacements","Map","replacements","_step","_iterator","_step$value","doCustomReplacements","normalize","removeMootSeparators","separator","escapedSeparator","escapeStringRegexp","slugify","shouldPrependUnderscore","lowercase","decamelize","preserveLeadingUnderscore","preserveTrailingDash","startsWith","shouldAppendDash","endsWith","patternSlug","toLowerCase","TagList","PostTags","tags","map","tag","Link","to","memo"],"sourceRoot":""}